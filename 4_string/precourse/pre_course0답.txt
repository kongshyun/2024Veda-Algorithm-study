# PRE_COURSE 0

- 목표:
    - 연산자 우선순위
    - 주소값을 이용한 연산
    

---

## 1. 📝 아래의 연산자들의 우선순위를 정리한다

- * (역참조 연산)
- .
- →
- [ ]
- 전위 증가/감소
- 후위 증가/감소


-->답변: 
[] 배열인덱스
후위증가/감소 
. (멤버접근연산자)
-> (포인터를 통해 구조체 멤버 접근)
전위증가/감소
*(역참조 연산자) 

/---------------------------------------------------------

##2.  📝 아래 4개의 질문을 채워주세요

질문 1:

다음 코드를 실행 한 후 num, p의 값은 무엇일까요?

```c
int nums[] = { 200, 75, 999 };
int* p = nums; /* 변수 nums의 주소는 0x104라 가정 */
int num = *p++;
```

답 1:
    num: 200
    p: 0x108   (0x104 + 4byte)

//--------

질문 2:

다음 코드를 실행 한 후 num, p의 값은 무엇일까요?

```c
int nums[] = { 200, 75, 999 };
int* p = nums; /* 변수 nums의 주소는 0x104라 가정 */
int num = ++*p;
```

답 2:
    num: 201( *p값을 1 증가시킴)
    p: 0x104 ( p는 여전히 nums[0])


/------


질문 3:

다음 코드를 실행 한 후 num, p의 값은 무엇일까요?

```c
int nums[] = { 200, 75, 999 };
int* p = nums; /* 변수 nums의 주소는 0x104라 가정 */
int num = *++p;
```

답 3:
    num: 75
    p: 0x108

/-------
질문 4:

다음 코드를 실행 한 후 num, p의 값은 무엇일까요?

```c
int nums[] = { 200, 75, 999 };
int* p = nums; /* 변수 nums의 주소는 0x104라 가정 */
int num = (*p)++;
```

답 4:
    num: 200 ( ++되기 전에 저장됨.)🔴 
    p: 0x104

/---------------------------------------------------------
## 3. 📝 아래의 코드는 무엇을 의미하나요?

1.

```c
int nums[] = { 123, 512, 1, 9581, 323 };
int* a = &nums[2];
int* b = &nums[4];

printf("%??\n", b - a);
```

- ?? 에 본인이 생각하기에 적당한 서식문자를 넣어주세요
        -> %d
- 값이 무엇이 나올까요?
        -> 2
2.🔴 

```c
char chars[] = { 'a', 'b', 'c', 'd', 'e' };
char* a = &chars[2];
char* b = &chars[4];

printf("%??\n", b - a);
```

- ?? 에 본인이 생각하기에 적당한 서식문자를 넣어주세요
    -> %p
- 값이 무엇이 나올까요?
    -> 0ㅌ008


    --->>>🔴 틀림!!!!!!!!!!!!!!!!!
     : 포인터 뺄셈 연산의 결과는 요소의 개수를 나타내므로 %d사용.